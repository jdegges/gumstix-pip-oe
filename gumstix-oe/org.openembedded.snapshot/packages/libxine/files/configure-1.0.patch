--- xine-lib-1-rc6a/configure.ac.orig	2004-09-16 22:28:33.762843408 -0400
+++ xine-lib-1-rc6a/configure.ac	2004-09-16 22:29:00.969707336 -0400
@@ -622,7 +622,7 @@
 dnl ---------------------------------------------
 
 AM_PATH_AALIB(1.4,, AC_MSG_RESULT([*** All of AALIB dependent parts will be disabled ***]))
-AM_CONDITIONAL(HAVE_AA, test x$no_aalib != "xyes")
+AM_CONDITIONAL(HAVE_AA,  [test x"$enable_aalib" = "xyes" && test x$no_aalib != "xyes"])
 
 
 dnl ---------------------------------------------
@@ -735,10 +735,7 @@
 dnl check for SDL
 dnl ---------------------------------------------
 
-AM_PATH_SDL(1.1.5, 
-	AC_DEFINE(HAVE_SDL,1,[Define this if you have SDL library installed]),
-	[])
-AM_CONDITIONAL(HAVE_SDL, [test x"$no_sdl" != x"yes"])
+AM_CONDITIONAL(HAVE_SDL, 0)
 
 
 dnl ---------------------------------------------
@@ -868,61 +865,29 @@
 dnl Ogg/Theora libs.
 dnl ---------------------------------------------
 
-AM_PATH_OGG(
-           [ AM_PATH_THEORA(AC_DEFINE(HAVE_THEORA,1,[Define this if you have theora]),
-                           AC_MSG_RESULT([*** All OGG/THEORA dependent parts will be disabled ***]))
-          ],
-           AC_MSG_RESULT([*** All of OGG/Theora dependent parts will be disabled ***]))
-AM_CONDITIONAL(HAVE_THEORA, [test x"$no_ogg" != "xyes" -a x"$no_theora" != "xyes"])
+AM_CONDITIONAL(HAVE_THEORA, 0)
 
 
 dnl ---------------------------------------------
 dnl Ogg/Speex libs.
 dnl ---------------------------------------------
 
-PKG_CHECK_MODULES(SPEEX, speex, no_speex="no", no_speex="yes")
-
-if test "x$no_speex" = "xyes" ; then
-  AM_PATH_OGG([ AM_PATH_SPEEX(no_speex="no")])
-fi
-
-if test "x$no_speex" = "xyes" ; then
-  AC_MSG_RESULT([*** All OGG/SPEEX dependent parts will be disabled ***])
-else
-  AC_DEFINE(HAVE_SPEEX,1,[Define this if you have speex])
-
-  dnl Test whether Speex headers are eg. <speex.h> or <speex/speex.h>
-  dnl Speex headers were moved in mid-2004; 1.0.x has backwards compatible headers, 1.1.x does not
-  AC_CHECK_HEADER([speex/speex.h],
-                  AC_DEFINE(HAVE_SPEEX_SUBDIR, [1], [Define to 1 if speex headers are eg. <speex/speex.h>])
-  )
-
-  AC_SUBST(SPEEX_CFLAGS)
-  AC_SUBST(SPEEX_LIBS)
-fi
-AM_CONDITIONAL(HAVE_SPEEX, [test x"$no_ogg" != "xyes" -a x"$no_speex" != "xyes"])
+AM_CONDITIONAL(HAVE_SPEEX, 0)
 
 
 dnl ---------------------------------------------
 dnl check for libFLAC
 dnl ---------------------------------------------
 
-AM_PATH_LIBFLAC([],
-	AC_MSG_RESULT([*** All FLAC dependent parts will be disabled ***]))
-AM_CONDITIONAL(HAVE_FLAC, [test x"$no_libFLAC" != "xyes"])
+AM_CONDITIONAL(HAVE_FLAC, 0)
 
 
 dnl ---------------------------------------------
 dnl MNG libs.
 dnl ---------------------------------------------
 
-AC_CHECK_LIB(mng, mng_initialize,
-	[ AC_CHECK_HEADER(libmng.h,
-		[ have_libmng=yes
-		  MNG_LIBS="-lmng" ], 
-		AC_MSG_RESULT([*** All libmng dependent parts will be disabled ***]))],
-	AC_MSG_RESULT([*** All libmng dependent parts will be disabled ***]))
-AM_CONDITIONAL(HAVE_LIBMNG, test x"$have_libmng" = "xyes")
+MNG_LIBS=""
+AM_CONDITIONAL(HAVE_LIBMNG, 0)
 AC_SUBST(MNG_LIBS)
 
 
@@ -952,7 +917,7 @@
 dnl freetype2 lib.
 dnl ---------------------------------------------
 
-AM_PATH_FREETYPE2()
+AM_CONDITIONAL(HAVE_FT2, 0)
 
 
 dnl ---------------------------------------------
@@ -995,37 +960,21 @@
 dnl ESD support
 dnl ---------------------------------------------
 
-AM_PATH_ESD(0.2.8,
-        AC_DEFINE(HAVE_ESD,1,[Define this if you have ESD (libesd) installed]),
-        AC_MSG_RESULT(*** All of ESD dependent parts will be disabled ***))
-AM_CONDITIONAL(HAVE_ESD, test x"$no_esd" != "xyes")
+AM_CONDITIONAL(HAVE_ESD, 0)
 
 
 dnl ---------------------------------------------
 dnl ARTS support
 dnl ---------------------------------------------
 
-AM_PATH_ARTS(0.9.5,
-        AC_DEFINE(HAVE_ARTS,1,[Define this if you have ARTS (libartsc) installed]),
-        AC_MSG_RESULT(*** All of ARTS dependent parts will be disabled ***))
-AM_CONDITIONAL(HAVE_ARTS, test x"$no_arts" != "xyes")
+AM_CONDITIONAL(HAVE_ARTS, 0)
 
 
 dnl ---------------------------------------------
 dnl gnome-vfs support
 dnl ---------------------------------------------
 
-PKG_CHECK_MODULES(GNOME_VFS, gnome-vfs-2.0,
-                no_gnome_vfs=no,
-		no_gnome_vfs=yes)
-AC_SUBST(GNOME_VFS_CFLAGS)
-AC_SUBST(GNOME_VFS_LIBS)
-if test x"$no_gnome_vfs" != "xyes"; then
-AC_DEFINE(HAVE_GNOME_VFS,1,[Define this if you have gnome-vfs installed])
-else
-AC_MSG_RESULT(*** All of the gnome-vfs dependent parts will be disabled ***)
-fi
-AM_CONDITIONAL(HAVE_GNOME_VFS, test x"$no_gnome_vfs" != "xyes")
+AM_CONDITIONAL(HAVE_GNOME_VFS, 0)
 
 
 dnl ---------------------------------------------
@@ -1188,35 +1137,7 @@
     ],ISOC99_PRAGMA=no)
     AC_MSG_RESULT($ISOC99_PRAGMA)
 
-    dnl bitfield order
-    AC_MSG_CHECKING(bitfield ordering in structs)
-    AC_TRY_RUN([
-int
- main() {
-  struct { char bit_0:1, bit_12:2, bit_345:3, bit_67:2; }
-#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ > 4)
-  __attribute__((packed))
-#endif
-  bf = { 1,1,1,1 };
-  if (sizeof (bf) != 1) return 1;
-  return *((unsigned char*) &bf) != 0x4b; }
-], bf_lsbf=1, AC_TRY_RUN([ 
-int
-main() {
-  struct { char bit_0:1, bit_12:2, bit_345:3, bit_67:2; }
-#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ > 4)
-  __attribute__((packed))
-#endif
-  bf = { 1,1,1,1 };
-  if (sizeof (bf) != 1) return 1;
-  return *((unsigned char*) &bf) != 0xa5; }
-], bf_lsbf=0, AC_MSG_ERROR([unsupported bitfield ordering])))
-    if test "x$bf_lsbf" = "x1"; then
-     AC_MSG_RESULT(LSBF)
-     AC_DEFINE(BITFIELD_LSBF, [], [compiler does lsbf in struct bitfields])
-    else
-     AC_MSG_RESULT(MSBF)
-    fi
+    AC_DEFINE(BITFIELD_LSBF, [], [compiler does lsbf in struct bitfields])
 
     AC_HAVE_HEADERS( errno.h fcntl.h \
 		     stdbool.h  stdlib.h stdint.h stdio.h string.h \
