--- beecrypt-3.1.0/acinclude.m4.orig	2004-10-06 17:09:25.000000000 +0200
+++ beecrypt-3.1.0/acinclude.m4	2004-10-06 17:12:22.000000000 +0200
@@ -9,7 +9,7 @@
 
 
 dnl  BEECRYPT_INT_TYPES
-AC_DEFUN(BEECRYPT_INT_TYPES,[
+AC_DEFUN([BEECRYPT_INT_TYPES],[
   AC_TYPE_SIZE_T
   bc_typedef_size_t=
   if test $ac_cv_type_size_t != yes; then
@@ -112,7 +112,7 @@
 
 
 dnl  BEECRYPT_CPU_BITS
-AC_DEFUN(BEECRYPT_CPU_BITS,[
+AC_DEFUN([BEECRYPT_CPU_BITS],[
   AC_CHECK_SIZEOF([unsigned long])
   if test $ac_cv_sizeof_unsigned_long -eq 8; then
     AC_SUBST(MP_WBITS,64U)
@@ -125,7 +125,7 @@
 
 
 dnl  BEECRYPT_WORKING_AIO
-AC_DEFUN(BEECRYPT_WORKING_AIO,[
+AC_DEFUN([BEECRYPT_WORKING_AIO],[
   AC_CHECK_HEADERS(aio.h)
   if test "$ac_cv_header_aio_h" = yes; then
     AC_SEARCH_LIBS([aio_read],[c rt aio posix4],[
@@ -228,7 +228,7 @@
 
 
 dnl  BEECRYPT_CFLAGS_REM
-AC_DEFUN(BEECRYPT_CFLAGS_REM,[
+AC_DEFUN([BEECRYPT_CFLAGS_REM],[
   if test "$CFLAGS" != ""; then
     CFLAGS_save=""
     for flag in $CFLAGS
@@ -243,7 +243,7 @@
 
 
 dnl  BEECRYPT_GNU_CC
-AC_DEFUN(BEECRYPT_GNU_CC,[
+AC_DEFUN([BEECRYPT_GNU_CC],[
   AC_REQUIRE([AC_PROG_CC])
   case $bc_target_arch in
   ia64)
@@ -331,7 +331,7 @@
 
 
 dnl  BEECRYPT_COMPAQ_CC
-AC_DEFUN(BEECRYPT_COMPAQ_CC,[
+AC_DEFUN([BEECRYPT_COMPAQ_CC],[
   AC_REQUIRE([AC_PROG_CC])
   AC_REQUIRE([AC_PROG_CPP])
   AC_CACHE_CHECK([whether we are using Compaq's C compiler],bc_cv_prog_COMPAQ_CC,[
@@ -355,7 +355,7 @@
 
 
 dnl  BEECRYPT_HPUX_CC
-AC_DEFUN(BEECRYPT_HPUX_CC,[
+AC_DEFUN([BEECRYPT_HPUX_CC],[
   if test "$ac_enable_debug" != yes; then
     BEECRYPT_CFLAGS_REM([-g])
     CFLAGS="$CFLAGS -fast"
@@ -364,7 +364,7 @@
 
 
 dnl  BEECRYPT_IBM_CC
-AC_DEFUN(BEECRYPT_IBM_CC,[
+AC_DEFUN([BEECRYPT_IBM_CC],[
   AC_REQUIRE([AC_PROG_CC])
   AC_REQUIRE([AC_PROG_CPP])
   AC_CACHE_CHECK([whether we are using IBM C],bc_cv_prog_IBM_CC,[
@@ -398,7 +398,7 @@
 
 
 dnl  BEECRYPT_INTEL_CC
-AC_DEFUN(BEECRYPT_INTEL_CC,[
+AC_DEFUN([BEECRYPT_INTEL_CC],[
   AC_REQUIRE([AC_PROG_CC])
   AC_REQUIRE([AC_PROG_CPP])
   AC_CACHE_CHECK([whether we are using Intel C++],bc_cv_prog_INTEL_CC,[
@@ -448,7 +448,7 @@
 
 
 dnl  BEECRYPT_SUN_FORTE_CC
-AC_DEFUN(BEECRYPT_SUN_FORTE_CC,[
+AC_DEFUN([BEECRYPT_SUN_FORTE_CC],[
   AC_REQUIRE([AC_PROG_CC])
   AC_REQUIRE([AC_PROG_CPP])
   AC_CACHE_CHECK([whether we are using Sun Forte C],bc_cv_prog_SUN_FORTE_CC,[
@@ -485,7 +485,7 @@
 
 
 dnl  BEECRYPT_ASM_DEFS
-AC_DEFUN(BEECRYPT_ASM_DEFS,[
+AC_DEFUN([BEECRYPT_ASM_DEFS],[
   AC_SUBST(ASM_OS,$target_os)
   AC_SUBST(ASM_CPU,$bc_target_cpu)
   AC_SUBST(ASM_ARCH,$bc_target_arch)
@@ -494,7 +494,7 @@
 
 
 dnl  BEECRYPT_ASM_TEXTSEG
-AC_DEFUN(BEECRYPT_ASM_TEXTSEG,[
+AC_DEFUN([BEECRYPT_ASM_TEXTSEG],[
   AC_CACHE_CHECK([how to switch to text segment],
     bc_cv_asm_textseg,[
       case $target_os in
@@ -516,7 +516,7 @@
 
 
 dnl  BEECRYPT_ASM_GLOBL
-AC_DEFUN(BEECRYPT_ASM_GLOBL,[
+AC_DEFUN([BEECRYPT_ASM_GLOBL],[
   AC_CACHE_CHECK([how to declare a global symbol],
     bc_cv_asm_globl,[
       case $target_os in
@@ -529,7 +529,7 @@
 
 
 dnl  BEECRYPT_ASM_GSYM_PREFIX
-AC_DEFUN(BEECRYPT_ASM_GSYM_PREFIX,[
+AC_DEFUN([BEECRYPT_ASM_GSYM_PREFIX],[
   AC_CACHE_CHECK([if global symbols need leading underscore],
     bc_cv_asm_gsym_prefix,[
       case $target_os in
@@ -542,7 +542,7 @@
 
 
 dnl  BEECRYPT_ASM_LSYM_PREFIX
-AC_DEFUN(BEECRYPT_ASM_LSYM_PREFIX,[
+AC_DEFUN([BEECRYPT_ASM_LSYM_PREFIX],[
   AC_CACHE_CHECK([how to declare a local symbol],
     bc_cv_asm_lsym_prefix,[
       case $target_os in
@@ -562,7 +562,7 @@
 
 
 dnl  BEECRYPT_ASM_ALIGN
-AC_DEFUN(BEECRYPT_ASM_ALIGN,[
+AC_DEFUN([BEECRYPT_ASM_ALIGN],[
   AC_CACHE_CHECK([how to align symbols],
     bc_cv_asm_align,[
       case $target_cpu in
@@ -587,7 +587,7 @@
 
 
 dnl  BEECRYPT_ASM_SOURCES
-AC_DEFUN(BEECRYPT_ASM_SOURCES,[
+AC_DEFUN([BEECRYPT_ASM_SOURCES],[
   echo > mpopt.s
   echo > aesopt.s
   echo > blowfishopt.s
