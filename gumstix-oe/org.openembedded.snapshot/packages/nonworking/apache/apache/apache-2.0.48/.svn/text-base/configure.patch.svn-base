
#
# Patch managed by http://www.mn-logistik.de/unsupported/pxa250/patcher
#

--- httpd-2.0.48/./configure.in~configure
+++ httpd-2.0.48/./configure.in
@@ -4,8 +4,9 @@
 dnl     Use ./buildconf to produce a configure script
 dnl
 
-AC_PREREQ(2.13)
-AC_INIT(ABOUT_APACHE)
+AC_PREREQ(2.57)
+AC_INIT
+AC_CONFIG_SRCDIR([ABOUT_APACHE])
 
 AC_CONFIG_HEADER(include/ap_config_auto.h)
 AC_CONFIG_AUX_DIR(build)
@@ -55,7 +56,7 @@
 dnl shared library support for these packages doesn't currently
 dnl work on some platforms
 
-AC_CANONICAL_SYSTEM
+AC_CANONICAL_TARGET([])
 
 orig_prefix="$prefix"
 
@@ -209,7 +210,7 @@
       APR_SETVAR(SINGLE_LISTEN_UNSERIALIZED_ACCEPT, [1])
       ;;
   *-solaris2*)
-      dnl This is a hack -- we should be using AC_TRY_RUN instead
+      dnl This is a hack -- we should be using AC_RUN_IFELSE([AC_LANG_SOURCE([[]])],[],[],[]) instead
       ap_platform_runtime_link_flag="-R"
       dnl solaris 8 and above don't have a thundering herd
       dnl not sure about rev's before this one.
@@ -286,7 +287,7 @@
 dnl ## Check for typedefs, structures, and compiler characteristics.
 
 AC_C_CONST
-if test "$ac_cv_prog_gcc" = "yes"; then
+if test "$ac_cv_c_compiler_gnu" = "yes"; then
   APR_ADDTO(NOTEST_CPPFLAGS,-DAP_HAVE_DESIGNATED_INITIALIZER)
 fi
 
@@ -305,9 +306,8 @@
 
 dnl ## Check for the tm_gmtoff field in struct tm to get the timezone diffs
 AC_CACHE_CHECK([for tm_gmtoff in struct tm], ac_cv_struct_tm_gmtoff,
-[AC_TRY_COMPILE([#include <sys/types.h>
-#include <time.h>], [struct tm tm; tm.tm_gmtoff;],
-  ac_cv_struct_tm_gmtoff=yes, ac_cv_struct_tm_gmtoff=no)])
+[AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>
+#include <time.h>]], [[struct tm tm; tm.tm_gmtoff;]])],[ac_cv_struct_tm_gmtoff=yes],[ac_cv_struct_tm_gmtoff=no])])
 if test "$ac_cv_struct_tm_gmtoff" = "yes"; then
     AC_DEFINE(HAVE_GMTOFF)
 fi
--- httpd-2.0.48/./srclib/apr/configure.in~configure
+++ httpd-2.0.48/./srclib/apr/configure.in
@@ -4,7 +4,8 @@
 dnl Process this file with autoconf to produce a configure script.
 dnl Use ./buildconf to prepare build files and run autoconf for APR.
 
-AC_INIT(build/apr_common.m4)
+AC_INIT
+AC_CONFIG_SRCDIR([build/apr_common.m4])
 AC_CONFIG_HEADER(include/arch/unix/apr_private.h)
 AC_CONFIG_AUX_DIR(build)
 
@@ -29,7 +30,7 @@
 dnl
 APR_CONFIG_NICE(config.nice)
 
-AC_CANONICAL_SYSTEM
+AC_CANONICAL_TARGET([])
 echo "Configuring APR library"
 echo "Platform: $host"
 
@@ -532,18 +533,14 @@
             dnl Linux is silly as it has pthread_rwlock_init defined
             dnl but keeps the pthread_rwlock_t structure hidden unless 
             dnl special things are defined.
-            AC_TRY_COMPILE([#include <sys/types.h>
-#include <pthread.h>], 
-                [pthread_rwlock_t rwlock=PTHREAD_RWLOCK_INITIALIZER;],
-                 ac_cv_struct_pthread_rw=yes, ac_cv_struct_pthread_rw=no)
+            AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>
+#include <pthread.h>]], [[pthread_rwlock_t rwlock=PTHREAD_RWLOCK_INITIALIZER;]])],[ac_cv_struct_pthread_rw=yes],[ac_cv_struct_pthread_rw=no])
             if test "$ac_cv_struct_pthread_rw" = "no"; then
-                AC_TRY_COMPILE([#define _XOPEN_SOURCE 500
+                AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#define _XOPEN_SOURCE 500
 #define _BSD_SOURCE
 #define _SVID_SOURCE
 #include <sys/types.h>
-#include <pthread.h>], 
-                    [pthread_rwlock_t rwlock=PTHREAD_RWLOCK_INITIALIZER;],
-                    ac_cv_struct_pthread_rw=yes, ac_cv_struct_pthread_rw=no)
+#include <pthread.h>]], [[pthread_rwlock_t rwlock=PTHREAD_RWLOCK_INITIALIZER;]])],[ac_cv_struct_pthread_rw=yes],[ac_cv_struct_pthread_rw=no])
                 if test "$ac_cv_struct_pthread_rw" = "yes"; then
                     APR_ADDTO(CPPFLAGS, [-D_XOPEN_SOURCE=500 -D_BSD_SOURCE])
                     APR_ADDTO(CPPFLAGS, [-D_SVID_SOURCE])
@@ -624,7 +621,7 @@
 if test "$ac_cv_func_mmap" = "yes" &&
    test "$ac_cv_file__dev_zero" = "yes"; then
     AC_MSG_CHECKING(for mmap that can map /dev/zero)
-    AC_TRY_RUN([
+    AC_RUN_IFELSE([AC_LANG_SOURCE([[
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <fcntl.h>
@@ -647,7 +644,7 @@
             return 3;
         }
         return 0;
-    }], [], [ac_cv_file__dev_zero=no], [ac_cv_file__dev_zero=no])
+    }]])],[],[ac_cv_file__dev_zero=no],[ac_cv_file__dev_zero=no])
 
     AC_MSG_RESULT($ac_cv_file__dev_zero)
 fi
@@ -852,7 +849,8 @@
 AC_SUBST(sendfile)
 
 AC_CHECK_FUNCS(sigaction, [ have_sigaction="1" ], [ have_sigaction="0" ]) 
-AC_DECL_SYS_SIGLIST
+AC_CHECK_DECLS([sys_siglist])
+
 
 AC_CHECK_FUNCS(fork, [ fork="1" ], [ fork="0" ])
 APR_CHECK_INET_ADDR
@@ -961,12 +959,11 @@
 # being included by itself.  Check for <netinet/tcp.h> manually,
 # including another header file first.
 AC_CACHE_CHECK([for netinet/tcp.h], [apr_cv_hdr_netinet_tcp_h],
-[AC_TRY_CPP(
-[#ifdef HAVE_NETINET_IN_H
+[AC_PREPROC_IFELSE([AC_LANG_SOURCE([[#ifdef HAVE_NETINET_IN_H
 #include <netinet/in.h>
 #endif
 #include <netinet/tcp.h>
-], [apr_cv_hdr_netinet_tcp_h=yes], [apr_cv_hdr_netinet_tcp_h=no])])
+]])],[apr_cv_hdr_netinet_tcp_h=yes],[apr_cv_hdr_netinet_tcp_h=no])])
 if test "$apr_cv_hdr_netinet_tcp_h" = "yes"; then
    netinet_tcph=1
    AC_DEFINE([HAVE_NETINET_TCP_H], 1, [Defined if netinet/tcp.h is present])
@@ -1039,7 +1036,7 @@
 if test "x$ac_cv_sizeof_voidp" != "x"; then
     voidp_size=$ac_cv_sizeof_voidp
 else
-    AC_ERROR([Cannot determine size of void*])
+    AC_MSG_ERROR([Cannot determine size of void*])
 fi
 
 dnl Checks for integer size
@@ -1378,7 +1375,7 @@
 fi
 
 AC_CACHE_CHECK(struct rlimit,ac_cv_struct_rlimit,[
-AC_TRY_RUN([
+AC_RUN_IFELSE([AC_LANG_SOURCE([[
 #include <sys/types.h>
 #include <sys/time.h>
 #include <sys/resource.h>
@@ -1388,10 +1385,10 @@
     limit.rlim_cur = 0;
     limit.rlim_max = 0;
     exit(0);
-}], [
-    ac_cv_struct_rlimit=yes ], [
-    ac_cv_struct_rlimit=no ], [
-    ac_cv_struct_rlimit=no ] ) ] )
+}]])],[
+    ac_cv_struct_rlimit=yes ],[
+    ac_cv_struct_rlimit=no ],[
+    ac_cv_struct_rlimit=no  ]) ] )
 struct_rlimit=0
 test "x$ac_cv_struct_rlimit" = xyes && struct_rlimit=1
 AC_SUBST(struct_rlimit)
@@ -1405,7 +1402,7 @@
 
 # Some systems return ENOSYS from sem_open.
 AC_CACHE_CHECK(for working sem_open,ac_cv_func_sem_open,[
-AC_TRY_RUN([
+AC_RUN_IFELSE([AC_LANG_SOURCE([[
 #include <errno.h>
 #include <stdlib.h>
 #include <fcntl.h>
@@ -1424,22 +1421,21 @@
     sem_close(psem);
     sem_unlink(sem_name);
     exit(0);
-}], [ac_cv_func_sem_open=yes], [ac_cv_func_sem_open=no],
-[ac_cv_func_sem_open=no])])
+}]])],[ac_cv_func_sem_open=yes],[ac_cv_func_sem_open=no],[ac_cv_func_sem_open=no])])
 
 # It's stupid, but not all platforms have union semun, even those that need it.
 AC_MSG_CHECKING(for union semun in sys/sem.h)
-AC_TRY_COMPILE([
+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
 #include <sys/types.h>
 #include <sys/ipc.h>
 #include <sys/sem.h>
-],[
+]], [[
 union semun arg;
 semctl(0, 0, 0, arg);
-], [have_union_semun="1" union_semun=yes ]
-msg=yes, [
+]])],[have_union_semun="1" union_semun=yes 
+msg=yes],[
 have_union_semun="0"
-msg=no ] )
+msg=no  ])
 AC_MSG_RESULT([$msg])
 AC_SUBST(have_union_semun)
 
@@ -1461,7 +1457,7 @@
     # Linux and older versions of AIX have this problem.
     APR_IFALLYES(header:pthread.h define:PTHREAD_PROCESS_SHARED func:pthread_mutexattr_setpshared, [
       AC_CACHE_CHECK([for working PROCESS_SHARED locks], apr_cv_process_shared_works, [
-      AC_TRY_RUN([
+      AC_RUN_IFELSE([AC_LANG_SOURCE([[
 #include <sys/types.h>
 #include <pthread.h>
         int main()
@@ -1479,7 +1475,7 @@
             if (pthread_mutex_destroy(&mutex))
                 exit(5);
             exit(0);
-        }], [apr_cv_process_shared_works=yes], [apr_cv_process_shared_works=no])])
+        }]])],[apr_cv_process_shared_works=yes],[apr_cv_process_shared_works=no],[])])
       # Override detection of pthread_mutexattr_setpshared
       ac_cv_func_pthread_mutexattr_setpshared=$apr_cv_process_shared_works])
 
@@ -1488,15 +1484,15 @@
         if test "$ac_cv_func_pthread_mutexattr_setrobust_np" = "no"; then
             AC_CACHE_CHECK([for pthread_mutexattr_setrobust_np with _POSIX_THREAD_PRIO_INHERIT],
             [apr_cv_setrobust_with_prio_inherit], [
-            AC_TRY_COMPILE([#define _POSIX_THREAD_PRIO_INHERIT
+            AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#define _POSIX_THREAD_PRIO_INHERIT
 #include <sys/types.h>
-#include <pthread.h>],[
+#include <pthread.h>]], [[
             int main()
             {
                 pthread_mutexattr_t attr;
                 pthread_mutexattr_setrobust_np(&attr, PTHREAD_MUTEX_ROBUST_NP);
                 return 0;
-            }], [apr_cv_setrobust_with_prio_inherit=yes], [apr_cv_setrobust_with_prio_inherit=no])])
+            }]])],[apr_cv_setrobust_with_prio_inherit=yes],[apr_cv_setrobust_with_prio_inherit=no])])
             if test "$apr_cv_setrobust_with_prio_inherit" = "yes"; then
                 ac_cv_func_pthread_mutexattr_setrobust_np=yes
                 APR_ADDTO(CPPFLAGS, -D_POSIX_THREAD_PRIO_INHERIT)
@@ -1664,7 +1660,7 @@
     if test -r "$apr_devrandom"; then
       rand="1"
     else
-      AC_ERROR([$apr_devrandom not found or unreadable.])
+      AC_MSG_ERROR([$apr_devrandom not found or unreadable.])
     fi
   fi
 
@@ -1700,9 +1696,8 @@
 dnl ----------------------------- Checking for Time Support 
 echo "${nl}Checking for Time Support..."
 AC_CACHE_CHECK([for tm_gmtoff in struct tm], ac_cv_struct_tm_gmtoff,
-[AC_TRY_COMPILE([#include <sys/types.h>
-#include <time.h>], [struct tm tm; tm.tm_gmtoff;],
-  ac_cv_struct_tm_gmtoff=yes, ac_cv_struct_tm_gmtoff=no)])
+[AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>
+#include <time.h>]], [[struct tm tm; tm.tm_gmtoff;]])],[ac_cv_struct_tm_gmtoff=yes],[ac_cv_struct_tm_gmtoff=no])])
 
 if test "$ac_cv_struct_tm_gmtoff" = "yes"; then
     AC_DEFINE(HAVE_GMTOFF, 1, [Define if struct tm has a tm_gmtoff field])
@@ -1711,14 +1706,14 @@
 dnl ----------------------------- Checking for Networking Support 
 echo "${nl}Checking for Networking support..."
 AC_MSG_CHECKING(for in_addr in netinet/in.h)
-AC_TRY_COMPILE([
+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
 #include <sys/types.h>
 #include <netinet/in.h>
-],[
+]], [[
 struct in_addr arg;
 arg.s_addr = htonl(INADDR_ANY);
-], [ have_in_addr="1" 
-msg=yes ] , [ have_in_addr="0"
+]])],[ have_in_addr="1" 
+msg=yes  ],[ have_in_addr="0"
 msg=no ])
 AC_MSG_RESULT([$msg])
 
@@ -1920,12 +1915,13 @@
 dir=include/arch/unix
 test -d $dir || $MKDIR $dir
 
-AC_OUTPUT([
+AC_CONFIG_FILES([
 	$MAKEFILE1 $MAKEFILE2 $MAKEFILE3
 	include/apr.h
 	build/apr_rules.mk
 	apr-config
-],[
+])
+AC_CONFIG_COMMANDS([default],[[
 for i in $SAVE_FILES; do
   if cmp -s $i $i.save 2>/dev/null; then
     mv $i.save $i
@@ -1934,7 +1930,8 @@
   rm -f $i.save
 done
 chmod +x apr-config
-])
+]],[[]])
+AC_OUTPUT
 
 dnl ----------------------------- Fixup Makefiles for VPATH support
 
--- httpd-2.0.48/./srclib/pcre/configure.in~configure
+++ httpd-2.0.48/./srclib/pcre/configure.in
@@ -3,7 +3,8 @@
 dnl This is required at the start; the name is the name of a file
 dnl it should be seeing, to verify it is in the same directory.
 
-AC_INIT(dftables.c)
+AC_INIT
+AC_CONFIG_SRCDIR([dftables.c])
 
 dnl Arrange to build config.h from config.in. Note that pcre.h is
 dnl built differently, as it is just a "substitution" file.
@@ -101,4 +102,6 @@
 AC_SUBST(PCRE_POSIXLIB_VERSION)
 
 dnl This must be last; it determines what files are written as well as config.h
-AC_OUTPUT(Makefile pcre.h:pcre.in pcre-config,[chmod a+x pcre-config])
+AC_CONFIG_FILES([Makefile pcre.h:pcre.in pcre-config])
+AC_CONFIG_COMMANDS([default],[[chmod a+x pcre-config]],[[]])
+AC_OUTPUT
--- httpd-2.0.48/./srclib/apr-util/xml/expat/configure.in~configure
+++ httpd-2.0.48/./srclib/apr-util/xml/expat/configure.in
@@ -10,7 +10,8 @@
 dnl   in the file COPYING that comes with this distribution.
 dnl
 
-AC_INIT(Makefile.in)
+AC_INIT
+AC_CONFIG_SRCDIR([Makefile.in])
 AC_CONFIG_AUX_DIR(conftools)
 
 dnl
@@ -45,7 +46,7 @@
 
 AC_CONFIG_HEADER(config.h)
 
-AC_CANONICAL_SYSTEM
+AC_CANONICAL_TARGET([])
 case "$host_alias" in
 *os2*)
     # Use a custom made libtool replacement
@@ -106,4 +107,5 @@
 
 AC_CHECK_FUNCS(memmove bcopy)
 
-AC_OUTPUT(Makefile lib/Makefile lib/expat.h)
+AC_CONFIG_FILES([Makefile lib/Makefile lib/expat.h])
+AC_OUTPUT
--- httpd-2.0.48/./srclib/apr-util/configure.in~configure
+++ httpd-2.0.48/./srclib/apr-util/configure.in
@@ -2,8 +2,9 @@
 dnl Process this file with autoconf to produce a configure script
 dnl
 
-AC_PREREQ(2.13)
-AC_INIT(export_vars.sh.in)
+AC_PREREQ(2.57)
+AC_INIT
+AC_CONFIG_SRCDIR([export_vars.sh.in])
 
 AC_CONFIG_HEADER(include/private/apu_config.h)
 AC_CONFIG_AUX_DIR(build)
@@ -30,7 +31,7 @@
   USE_VPATH=1
 fi
 
-AC_CANONICAL_SYSTEM
+AC_CANONICAL_TARGET([])
 
 dnl
 dnl compute the top directory of the build
