--- M2Crypto/SSL/Connection.py.org	Wed Mar 31 08:49:57 2004
+++ M2Crypto/SSL/Connection.py	Wed Mar 31 08:50:45 2004
@@ -143,11 +143,11 @@
         """Set this connection's underlying socket to _mode_."""
         self.socket.setblocking(mode)
         if mode:
-            self.send = self.write = self._write_bio
-            self.recv = self.read = self._read_bio
+            self.send = self.write = Connection._write_bio
+            self.recv = self.read = Connection._read_bio
         else:
-            self.send = self.write = self._write_nbio
-            self.recv = self.read = self._read_nbio
+            self.send = self.write = Connection._write_nbio
+            self.recv = self.read = Connection._read_nbio
 
     def fileno(self):
         return self.socket.fileno()
--- M2Crypto/DSA.py.org	Wed Mar 31 08:53:16 2004
+++ M2Crypto/DSA.py	Wed Mar 31 08:53:35 2004
@@ -35,7 +35,7 @@
 
     def __getattr__(self, name):
         if name in ['p', 'q', 'g', 'pub', 'priv']:
-            method = getattr(m2, 'm2.dsa_get_%s' % (name,))
+            method = getattr(m2, 'dsa_get_%s' % (name,))
             assert m2.dsa_type_check(self.dsa), "'dsa' type error"
             return method(self.dsa)
         else:
--- M2Crypto/_version.py.org	Wed Mar 31 12:25:21 2004
+++ M2Crypto/_version.py	Wed Mar 31 12:24:18 2004
@@ -1,8 +1,8 @@
 """M2Crypto Version Info"""
 
-RCS_id='$Id: _version.py,v 1.2 2004/03/25 06:33:29 ngps Exp $'
+RCS_id='$Id: _version.py,v 1.3 2004/03/31 01:30:58 ngps Exp $'
 
 import string
-version_info = (0, 13)
+version_info = (0, 13, 1)
 version = string.join(map(lambda x: "%s" % x, version_info), ".")
 
